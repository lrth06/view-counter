name: Deploy
on:
    push:
        branches: [trunk]
        paths:
            - '**.ts'
            - '**.yml'
            - '**.yaml'
            - 'Dockerfile'
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [16.x]
                os: [linux]
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - run: npm ci --no-optional --quiet
            - run: npm run lint:fix
            - run: npm run build
            - run: npm test
    deploy:
        name: Setup Gcloud Account
        runs-on: ubuntu-latest
        needs:
            - build
        environment:
            name: Production Release
            url: https://view-counter.tobyhagan.com
        env:
            IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
        job_id:
            steps:
                - id: 'auth'
                  uses: 'google-github-actions/auth@v0'
                  with:
                      credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
                      project_id: ${{ secrets.GCP_PROJECT_ID }}
                      service_account_email: ${{ secrets.GCP_EMAIL }}
                      service_account_key: ${{ secrets.GCP_CREDENTIALS }}
                - name: 'Set up Cloud SDK'
                  uses: 'google-github-actions/setup-gcloud@v0'

                - name: 'Use gcloud CLI'
                  run: 'gcloud info'

                - name: Configure Docker
                  run: gcloud auth configure-docker --quiet

                - name: Checkout repository
                  uses: actions/checkout@v2

                - name: Build Docker image
                  run: docker build . -t $IMAGE_NAME

                - name: Push Docker image
                  run: docker push $IMAGE_NAME

                - name: Deploy Docker image
                  run: gcloud run deploy ${{ secrets.GCP_APP_NAME}} --image $IMAGE_NAME --region us-central1 --platform managed

                - name: Show Output
                  run: echo ${{ steps.deploy.outputs.url }}
